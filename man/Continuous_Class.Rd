% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/continuous_class.R
\name{Continuous_collapse}
\alias{Continuous_collapse}
\alias{Continuous_expand}
\alias{Continuous_fmt_numeric_cuts}
\alias{Continuous_factorize}
\alias{Continuous_predict}
\alias{Continuous_gen_code_sas}
\alias{Continuous_mono}
\alias{Continuous_exceptions}
\alias{Continuous_set_cutpoints}
\title{Collapse adjacent levels of a Continuous bin object}
\arguments{
\item{i}{numeric vector of bin levels to collapse. Must be adjacent.}

\item{i}{numeric vector of length 1 indiicating bin level to expand.}

\item{newdata}{Numeric vector on which to apply the transformation. Defaults
to the \code{x} field of the Continuous object}

\item{newdata}{numeric vector to apply performance substition. Defaults to
data used to create the Continuous object.}

\item{pfx}{character prefix to prepend to variable names}

\item{coef}{numeric coefficient to multiply performance values by. Passed in
by the Scorecard model object. Defaults to 1.}

\item{method}{method used for calculating the reference level for adverse
action codes. Three possible choices:
\itemize{
 \item{"min" }{Calculate difference from minimum of perf values - default}
 \item{"max" }{Calculate difference from maximum of perf values}
 \item{"neutral" }{Calculate difference from zero}#'
 }}

\item{i}{numeric value enumerating the variables. Passed in from other code.}

\item{m}{the monotonic relationship to enforce.}

\item{e}{numeric vector of exception values to withhold from binning}

\item{cuts}{space-separated list of numeric cutpoints}
}
\value{
modifies the transform object in place.

modifies the transform object in place.

character vector of bin labels

\code{list} with two fields. See details.

numeric variable with bin performance values substituted for
the inputs.

a character vector of SAS code
}
\description{
Collapse adjacent levels of a Continuous bin object

Expand a level of a Continuous bin into multiple new levels

Helper function to format Continuous bin labels

Preprocess transform object for summarization

Substitute summarized performance values for numeric inputs

generate SAS code representing the transformation from input
numeric values to the substituted performance values. Also generates code
calculating difference from min/max/neutral and adverse action code
assignments.

\code{mono} calls the \code{bin} function with the requested
monotoncity. The variable is discretized while enforcing the monotonicity.
The possible values are:
\itemize{
 \item{0 }{ No monotoncity enforced - the default.}
 \item{1 }{ Increasing monotoncically with the \code{y}}
 \item{-1 } {Decreasing monotoncically with the \code{y}}
 \item{2 }{ Either increasing or decreasing montonically with the \code{y}}
}

Set the exception values of the Bin object

\code{set_equal} sets the performance summary value of \code{i1}
equal to that of \code{i2}. This can be used to force two bins to have the
same substituted value.
}
\details{
The requested level is divided into quintiles if possible. Duplicate
levels are removed.

\code{factorize} returns a list with two fields:
\itemize{
 \item{factor }{ Factor with the bin labels applied to \code{x}}
 \item{types }{ list of logical vectors for missing, exception, and normal}
}
}
